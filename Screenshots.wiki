= Some screenshots from the current version of the program =

This page gives a short overview over the program and describes some of the features that can be used to create IPv6 packets. 

Usage should be fairly obvious. Each Protocol Layer has its own tab in the application. Extension headers can be stacked freely - you have to take care yourself that the packet you create is still in conformance with the IPv6 standard.
Scapy is fairly intelligent in its packet generation abilities and does not require you to populate each and every input field. Have fun trying things out...

<wiki:toc max_depth="2" />

----

== Ethernet Header ==

You can change fields in the Ethernet Header or manually set the interface for the outgoing packet. Usually Scapy takes care of these settings, so there is no need to change anything here.

http://scapy-gui-ipv6.googlecode.com/svn/Screenshots/Ethernet%20Header.jpg

----

== IPv6 Header ==
The IPv6 Header needs to be populated with the Destination Address. Scapy uses a suitable Source Address from your system.

http://scapy-gui-ipv6.googlecode.com/svn/Screenshots/IPv6%20Header.jpg

----

== IPv6 Extension Header ==

Several IPv6 Extension Headers are supported. You can insert them into the packet in any order you like.

http://scapy-gui-ipv6.googlecode.com/svn/Screenshots/Extension%20Header.jpg

----

== Upper Protocol Layer ==

The GUI currently supports the creation of ICMP, TCP and UDP packets. You can also leave the packet content empty.

http://scapy-gui-ipv6.googlecode.com/svn/Screenshots/Next%20Header%20TCP.jpg

----

== Scapy Code  ==

You can re-use the Scapy code that is generated by the tool. By clicking on the 'Clipboard' button the code is copied into the system clipboard and can later be pasted into an editor or a command-line Scapy session.

http://scapy-gui-ipv6.googlecode.com/svn/Screenshots/Scapycode%20Message%202.jpg